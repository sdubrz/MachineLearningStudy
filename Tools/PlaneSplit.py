# 给定一个二维平面上的一个矩形区域，和k个中心点
# 将平面分割成k个区域，每个区域到其中一个中心点的距离最小
# 最后返回边界线
# 思路：任意两个点之间的边界是这两个点构成的线段的中垂线
# 这些中垂线上真正的边界线部分必然是到两个中心点的距离相等，并且到其他任意
# 一个中心点的距离都大于到这两个中心点的距离，而不是真正的边界线的部分
# 必然到某一个中心点的距离最小，而到其他所有中心点的距离都大于该距离。
# 但是实际计算中产生的浮点误差可能会干扰判断
# 划分出的子区域肯定都是凸的
# 两个点的中垂线上的线段只有可能是相关的这两个点的边界，不可能是其他点的边界


def plane_split(rect, center_point):
    """

    :param rect: 要划分的矩形范围，包括四个顶点的坐标，依次是左上、左下、右上、右下四个顶点
    :param center_point: 中心点坐标
    :return:
    """
    # 首先求出所有的中垂线集合
    # 需要判断一下有没有重叠的线
    # 计算每条中垂线与外边界矩形以及其他中垂线的交点，并按照从左到右、从上到下的顺序进行排序
    # 依次判断中垂线上的每一段是否是真正的边界线，也就是判断每一段是否到第三个中心点最近


